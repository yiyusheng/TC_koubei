source('base.R')
load(file.path(dir_data,'shop_pay.Rda'))
load(file.path(dir_data,'shop_info.Rda'))
load(file.path(dir_data,'smp_aggra.Rda')) #smp_aggra <- gen_smp_aggra(shop_pay,test_start,k)
# load(file.path(dir_data,'volt_limit_set.Rda'))
flag_gen <- 1 #If generate the result
title <- '0212c.csv'  #file title
k <- 7  #days to extract as samples
volt_limit_weight <- 1.05
active_weight <- 1.05
last_k <- 1 #number of period used to adjust result
x <- ifelse(flag_gen == 1,test_end <- as.p('2016-11-15'),
ifelse(flag_gen == 0,test_end <- as.p('2016-11-01'),test_end <- as.p('2016-10-31')))
test_start <- test_end - 14*86400
rm(list = ls())
source('head.R')
source('gen_result_last_week_Func.R')
source('base.R')
load(file.path(dir_data,'shop_pay.Rda'))
load(file.path(dir_data,'shop_info.Rda'))
load(file.path(dir_data,'smp_aggra.Rda')) #smp_aggra <- gen_smp_aggra(shop_pay,test_start,k)
flag_gen <- 1 #If generate the result
title <- '0212c.csv'  #file title
k <- 7  #days to extract as samples
volt_limit_weight <- 1.05
flag_gen <- 0 #If generate the result
title <- '0212c.csv'  #file title
k <- 7  #days to extract as samples
volt_limit_weight <- 1.05
active_weight <- 1.05
last_k <- 1 #number of period used to adjust result
x <- ifelse(flag_gen == 1,test_end <- as.p('2016-11-15'),
ifelse(flag_gen == 0,test_end <- as.p('2016-11-01'),test_end <- as.p('2016-10-31')))
test_start <- test_end - 14*86400
shop_pay_train <- subset(shop_pay,uni_time < test_start)
min_date <- min(shop_pay_train$uni_time)
cut_date <- seq.POSIXt(test_start,min_date,by = -86400*k)
shop_pay_train$datecut <- cut.POSIXt(shop_pay_train$uni_time,cut_date)
split_shop_pay <- split(shop_pay_train,shop_pay_train$shop_id)
i = 1
df <- split_shop_pay[[i]]
shop_id <- names(split_shop_pay)[i]
r <- tapply(df$value,factor(df$datecut),function(x)list(mean(x),sd(x)))
source('~/Code/R/TC_koubei/gen_result_last_week_Func.R')
smp_aggra <- gen_smp_aggra(shop_pay,test_start,k)
df <- smp_aggra[[1]]
View(df)
rm(list = ls())
source('head.R')
source('gen_result_last_week_Func.R')
source('base.R')
load(file.path(dir_data,'shop_pay.Rda'))
load(file.path(dir_data,'shop_info.Rda'))
load(file.path(dir_data,'smp_aggra.Rda'))
# load(file.path(dir_data,'volt_limit_set.Rda'))
flag_gen <- 0 #If generate the result
title <- '0212c.csv'  #file title
k <- 7  #days to extract as samples
volt_limit_weight <- 1.05
active_weight <- 1.05
last_k <- 1 #number of period used to adjust result
x <- ifelse(flag_gen == 1,test_end <- as.p('2016-11-15'),
ifelse(flag_gen == 0,test_end <- as.p('2016-11-01'),test_end <- as.p('2016-10-31')))
test_start <- test_end - 14*86400
rm(list = ls())
source('head.R')
source('gen_result_last_week_Func.R')
source('base.R')
load(file.path(dir_data,'shop_pay.Rda'))
load(file.path(dir_data,'shop_info.Rda'))
load(file.path(dir_data,'smp_aggra.Rda'))
# load(file.path(dir_data,'volt_limit_set.Rda'))
flag_gen <- 0 #If generate the result
title <- '0212c.csv'  #file title
k <- 7  #days to extract as samples
volt_limit_weight <- 1.05
active_weight <- 1.05
last_k <- 1 #number of period used to adjust result
x <- ifelse(flag_gen == 1,test_end <- as.p('2016-11-15'),
ifelse(flag_gen == 0,test_end <- as.p('2016-11-01'),test_end <- as.p('2016-10-31')))
test_start <- test_end - 14*86400
df <- smp_aggra[[1]]
smp_aggra <- gen_smp_aggra(shop_pay,test_start,k)
save(smp_aggra,file = file.path(dir_data,'smp_aggra.Rda'))
rm(list = ls())
source('head.R')
source('gen_result_last_week_Func.R')
source('base.R')
load(file.path(dir_data,'shop_pay.Rda'))
load(file.path(dir_data,'shop_info.Rda'))
load(file.path(dir_data,'smp_aggra.Rda'))
# load(file.path(dir_data,'volt_limit_set.Rda'))
flag_gen <- 0 #If generate the result
title <- '0212c.csv'  #file title
k <- 7  #days to extract as samples
volt_limit_weight <- 1.05
active_weight <- 1.05
last_k <- 1 #number of period used to adjust result
x <- ifelse(flag_gen == 1,test_end <- as.p('2016-11-15'),
ifelse(flag_gen == 0,test_end <- as.p('2016-11-01'),test_end <- as.p('2016-10-31')))
test_start <- test_end - 14*86400
df <- smp_aggra[[1]]
View(df)
fit_mean <- auto.arima(df$smp_mean,D = 1,trace = F,
max.P = 0,max.Q = 0,max.p = 20,max.q = 20,
ic = 'aic')
pred_mean <- forecast.Arima(fit_mean,h = 2)
fit_sd <- auto.arima(df$smp_sd,D = 1,trace = F,
max.P = 0,max.Q = 0,max.p = 20,max.q = 20,
ic = 'aic')
pred_sd <- forecast.Arima(fit_sd,h = 2)
df$uni_time <- as.numeric(as.p(df$uni_time))
max_ut <- max(df$uni_time)
tmp <- data.frame(shop_id = df$shop_id[1],
uni_time = c(max_ut+86400*7,max_ut+86400*14),
smp_mean = pred_mean$mean[1:2],
smp_sd = pred_sd$mean[1:2])
df <- rbind(df,tmp)
df$uni_time <- as.POSIXct(df$uni_time,tz = 'UTC',origin = '1970-01-01')
View(df)
plot_week_aggra(df)
source('~/Code/R/TC_koubei/base.R')
source('~/Code/R/TC_koubei/base.R')
plot_week_aggra(df)
source('~/Code/R/TC_koubei/base.R')
plot_week_aggra(df)
plot_week_aggra(df)
source('~/Code/R/TC_koubei/base.R')
p <- plot_week_aggra(df)
p
View(df)
smp_aggra <- gen_smp_aggra(shop_pay,as.p('2016-11-01'),k)
save(smp_aggra,file = file.path(dir_data,'smp_aggra.Rda'))
df <- smp_aggra[[1]]
View(df)
test_start
df <- subset(df,uni_time <= test_start)
source('~/Code/R/TC_koubei/gen_result_last_week_Func.R')
smp_aggra <- gen_smp_aggra(shop_pay,as.p('2016-11-01'),k)
save(smp_aggra,file = file.path(dir_data,'smp_aggra.Rda'))
df <- smp_df([[1]])
df <- smp_df[[1]]
df <- smp_aggra[[1]]
df <- subset(df,uni_time < test_start)
fit_mean <- auto.arima(df$smp_mean,D = 1,trace = F,
max.P = 0,max.Q = 0,max.p = 20,max.q = 20,
ic = 'aic')
pred_mean <- forecast.Arima(fit_mean,h = 2)
fit_sd <- auto.arima(df$smp_sd,D = 1,trace = F,
max.P = 0,max.Q = 0,max.p = 20,max.q = 20,
ic = 'aic')
pred_sd <- forecast.Arima(fit_sd,h = 2)
df$uni_time <- as.numeric(as.p(df$uni_time))
max_ut <- max(df$uni_time)
df$uni_time <- as.numeric(df$uni_time)
max_ut <- max(df$uni_time)
tmp <- data.frame(shop_id = df$shop_id[1],
uni_time = c(max_ut+86400*7,max_ut+86400*14),
smp_mean = pred_mean$mean[1:2],
smp_sd = pred_sd$mean[1:2])
df <- rbind(df,tmp)
df$uni_time <- as.POSIXct(df$uni_time,tz = 'UTC',origin = '1970-01-01')
m <- merge(subset(df,uni_time > test_start),subset(dfo,uni_time > test_start),by = c('shop_id','uni_time'))
dfo <- smp_aggra[[1]]
require(forecast)
df <- subset(dfo,uni_time < test_start)
fit_mean <- auto.arima(df$smp_mean,D = 1,trace = F,
max.P = 0,max.Q = 0,max.p = 20,max.q = 20,
ic = 'aic')
pred_mean <- forecast.Arima(fit_mean,h = 2)
fit_sd <- auto.arima(df$smp_sd,D = 1,trace = F,
max.P = 0,max.Q = 0,max.p = 20,max.q = 20,
ic = 'aic')
pred_sd <- forecast.Arima(fit_sd,h = 2)
df$uni_time <- as.numeric(df$uni_time)
max_ut <- max(df$uni_time)
tmp <- data.frame(shop_id = df$shop_id[1],
uni_time = c(max_ut+86400*7,max_ut+86400*14),
smp_mean = pred_mean$mean[1:2],
smp_sd = pred_sd$mean[1:2])
df <- rbind(df,tmp)
df$uni_time <- as.POSIXct(df$uni_time,tz = 'UTC',origin = '1970-01-01')
m <- merge(subset(df,uni_time > test_start),subset(dfo,uni_time > test_start),by = c('shop_id','uni_time'))
View(m)
m <- merge(subset(df,uni_time >= test_start),subset(dfo,uni_time > test_start),by = c('shop_id','uni_time'))
test_start
View(dfo)
View(dfo)
View(df)
subset(df,uni_time >= test_start)
subset(dfo,uni_time > test_start)
View(dfo)
dfo$uni_time[55]
m1 <- merge(subset(df,uni_time >= test_start,c('uni_time','smp_mean')),
subset(dfo,uni_time >= test_start,c('uni_time','smp_mean')),
by = c('uni_time'))
View(m1)
3**2
c(1,2,3)**2
View(m1)
source('~/Code/R/TC_koubei/base.R')
source('~/Code/R/TC_koubei/base.R')
error_mean <- mse(df$smp_mean[df$uni_time > test_start],dfo$smp_mean[dfo$uni_time > test_start])
df
dfo
error_mean2 <- mse(rep(dfo$smp_mean[which.min(dfo$uni_time,test_start)],2),dfo$smp_mean[dfo$uni_time > test_start])
error_mean2 <- mse(rep(dfo$smp_mean[which.min(dfo$uni_time-test_start)],2),dfo$smp_mean[dfo$uni_time > test_start])
rep(dfo$smp_mean[which.min(dfo$uni_time-test_start)],2)
dfo$smp_mean[dfo$uni_time > test_start]
df$smp_mean[df$uni_time > test_start]
error_mean1 <- mse(df$smp_mean[df$uni_time >= test_start],dfo$smp_mean[dfo$uni_time >= test_start])
error_mean2 <- mse(rep(dfo$smp_mean[which.min(dfo$uni_time-test_start)],2),dfo$smp_mean[dfo$uni_time >= test_start])
dfo$smp_mean[dfo$uni_time >= test_start]
df$smp_mean[df$uni_time >= test_start]
rep(dfo$smp_mean[which.min(dfo$uni_time-test_start)],2)
error_sd1 <- mse(df$smp_sd[df$uni_time >= test_start],dfo$smp_sd[dfo$uni_time >= test_start])
error_sd2 <- mse(rep(dfo$smp_sd[which.min(dfo$uni_time-test_start)],2),dfo$smp_sd[dfo$uni_time >= test_start])
source('~/Code/R/TC_koubei/base.R')
source('~/Code/R/TC_koubei/base.R')
source('~/Code/R/TC_koubei/base.R')
r <- lapply(smp_aggra,arimaX)
r <- lapply(smp_aggra,arimaX,test_start = test_start)
r <- lapply(smp_aggra,arimaX,test_start = test_start)
source('~/Code/R/TC_koubei/base.R')
r <- lapply(smp_aggra,arimaX,test_start = test_start)
source('~/Code/R/TC_koubei/base.R')
r <- lapply(smp_aggra,arimaX,test_start = test_start)
smp_aggra[[1]]$shop_id[1]
smp_aggra[[2]]$shop_id[1]
r <- lapply(smp_aggra[1:10],arimaX,test_start = test_start)
source('~/Code/R/TC_koubei/base.R')
r <- lapply(smp_aggra[1:10],arimaX,test_start = test_start)
dfo <- smp_aggra[[10]]
df <- subset(dfo,uni_time < test_start)
fit_mean <- auto.arima(df$smp_mean,D = 1,trace = F,
max.P = 0,max.Q = 0,max.p = 20,max.q = 20,
ic = 'aic')
pred_mean <- forecast.Arima(fit_mean,h = 2)
fit_sd <- auto.arima(df$smp_sd,D = 1,trace = F,
max.P = 0,max.Q = 0,max.p = 20,max.q = 20,
ic = 'aic')
pred_sd <- forecast.Arima(fit_sd,h = 2)
df$uni_time <- as.numeric(df$uni_time)
max_ut <- max(df$uni_time)
tmp <- data.frame(shop_id = df$shop_id[1],
uni_time = c(max_ut+86400*7,max_ut+86400*14),
smp_mean = pred_mean$mean[1:2],
smp_sd = pred_sd$mean[1:2])
df <- rbind(df,tmp)
df$uni_time <- as.POSIXct(df$uni_time,tz = 'UTC',origin = '1970-01-01')
m1 <- merge(subset(df,uni_time >= test_start,c('uni_time','smp_mean')),
subset(dfo,uni_time >= test_start,c('uni_time','smp_mean')),
by = c('uni_time'))
error_mean1 <- mse(df$smp_mean[df$uni_time >= test_start],dfo$smp_mean[dfo$uni_time >= test_start])
error_mean2 <- mse(rep(dfo$smp_mean[which.min(dfo$uni_time-test_start)],2),dfo$smp_mean[dfo$uni_time >= test_start])
error_sd1 <- mse(df$smp_sd[df$uni_time >= test_start],dfo$smp_sd[dfo$uni_time >= test_start])
error_sd2 <- mse(rep(dfo$smp_sd[which.min(dfo$uni_time-test_start)],2),dfo$smp_sd[dfo$uni_time >= test_start])
df$smp_mean[df$uni_time >= test_start]
dfo$smp_mean[dfo$uni_time >= test_start]
rep(dfo$smp_mean[which.min(dfo$uni_time-test_start)],2)
View(dfo)
which.min(dfo$uni_time-test_start)
dfo$uni_time-test_start
error_mean1 <- mse(df$smp_mean[df$uni_time >= test_start],dfo$smp_mean[dfo$uni_time >= test_start])
error_mean2 <- mse(rep(dfo$smp_mean[which.min(abs(dfo$uni_time-test_start))],2),dfo$smp_mean[dfo$uni_time >= test_start])
error_sd1 <- mse(df$smp_sd[df$uni_time >= test_start],dfo$smp_sd[dfo$uni_time >= test_start])
error_sd2 <- mse(rep(dfo$smp_sd[which.min(abs(dfo$uni_time-test_start))],2),dfo$smp_sd[dfo$uni_time >= test_start])
rep(dfo$smp_mean[which.min(abs(dfo$uni_time-test_start))],2)
df <- smp_aggra[[1]]
dfa <- subset(df,uni_time < test_start)
dfb <- subset(df,uni_time >= test_start)
fit_mean <- auto.arima(dfa$smp_mean,D = 1,trace = F,
max.P = 0,max.Q = 0,max.p = 20,max.q = 20,
ic = 'aic')
fit_sd <- auto.arima(dfa$smp_sd,D = 1,trace = F,
max.P = 0,max.Q = 0,max.p = 20,max.q = 20,
ic = 'aic')
pred_mean <- forecast.Arima(fit_mean,h = 2)
pred_sd <- forecast.Arima(fit_sd,h = 2)
pred_mean <- forecast.Arima(fit_mean,h = 2)$mean[1:2]
pred_sd <- forecast.Arima(fit_sd,h = 2)$mean[1:2]
pred_mean <- forecast.Arima(fit_mean,h = 2)$mean[1:2]
pred_sd <- forecast.Arima(fit_sd,h = 2)$mean[1:2]
real_mean <- dfb$smp_mean
real_sd <- dfb$smp_sd
last_mean <- rep(dfa$smp_mean[which.max(dfa$uni_time)],2)
last_sd <- rep(dfa$smp_sd[which.max(dfa$uni_time)],2)
dfa <- subset(df,uni_time < test_start)
dfb <- subset(df,uni_time >= test_start)
fit_mean <- auto.arima(dfa$smp_mean,D = 1,trace = F,
max.P = 0,max.Q = 0,max.p = 20,max.q = 20,
ic = 'aic')
fit_sd <- auto.arima(dfa$smp_sd,D = 1,trace = F,
max.P = 0,max.Q = 0,max.p = 20,max.q = 20,
ic = 'aic')
pred_mean <- forecast.Arima(fit_mean,h = 2)$mean[1:2]
pred_sd <- forecast.Arima(fit_sd,h = 2)$mean[1:2]
real_mean <- dfb$smp_mean
real_sd <- dfb$smp_sd
last_mean <- rep(dfa$smp_mean[which.max(dfa$uni_time)],2)
last_sd <- rep(dfa$smp_sd[which.max(dfa$uni_time)],2)
error_mean1 <- mse(real_mean,pred_mean)
error_mean2 <- mse(real_mean,last_mean)
error_sd1 <- mse(real_sd,pred_sd)
error_sd2 <- mse(real_sd,last_sd)
source('~/Code/R/TC_koubei/base.R')
r <- lapply(smp_aggra[1:10],arimaX,test_start = test_start)
df <- smp_aggra[[10]]
cat(sprintf('%d\n',df$shop_id[1]))
df$shop_id[1]
source('~/Code/R/TC_koubei/base.R')
r <- lapply(smp_aggra[1:10],arimaX,test_start = test_start)
source('~/Code/R/TC_koubei/base.R')
r <- lapply(smp_aggra[1:10],arimaX,test_start = test_start)
source('~/Code/R/TC_koubei/base.R')
r <- lapply(smp_aggra[1:10],arimaX,test_start = test_start)
r1 <- do.call(rbind,r)
View(r1)
colSums(r1)
require(doParallel)
idx <- seq_len(length(smp_aggra))
ck <- makeCluster(min(floor(detectCores()*0.9),length(idx)),outfile = 'out_na')
registerDoParallel(ck)
r <- foreach(i = idx,.verbose = T,.packages = 'reshape2') %dopar% arimaX(smp_aggra[[i]],test_start = test_start)
stopCluster(ck)
r1 <- do.call(rbind,r)
require(doParallel)
idx <- seq_len(length(smp_aggra))
ck <- makeCluster(min(floor(detectCores()*0.9),length(idx)),type = 'FORK',outfile = 'out_na')
registerDoParallel(ck)
r <- foreach(i = idx,.verbose = T,.packages = 'reshape2') %dopar% arimaX(smp_aggra[[i]],test_start = test_start)
stopCluster(ck)
r1 <- do.call(rbind,r)
colSums(r1)
View(r1)
summary(r1)
colSums(r1,na.rm = T)
source('~/Code/R/TC_koubei/base.R')
require(doParallel)
idx <- seq_len(length(smp_aggra))
ck <- makeCluster(min(floor(detectCores()*0.9),length(idx)),type = 'FORK',outfile = 'out_na')
registerDoParallel(ck)
r <- foreach(i = idx,.verbose = T,.packages = 'reshape2') %dopar% arimaX(smp_aggra[[i]],test_start = test_start)
stopCluster(ck)
r2 <- do.call(rbind,r)
colMeans(r1,na.rm = T)
colMeans(r2,na.rm = T)
source('~/Code/R/TC_koubei/base.R')
require(doParallel)
idx <- seq_len(length(smp_aggra))
ck <- makeCluster(min(floor(detectCores()*0.9),length(idx)),type = 'FORK',outfile = 'out_na')
registerDoParallel(ck)
r <- foreach(i = idx,.verbose = T,.packages = 'reshape2') %dopar% arimaX(smp_aggra[[i]],test_start = test_start)
stopCluster(ck)
r3 <- do.call(rbind,r)
colMeans(r1,na.rm = T);colMeans(r2,na.rm = T);colMeans(r3,na.rm = T)
summary(sapply(smp_aggra,nrow))
df <- smp_aggra
df <- smp_aggra[[1]]
View(df)
comb_start <- test_start - 90*86400
dfa <- subset(df,uni_time < test_start & uni_time >= comb_start)
dfb <- subset(df,uni_time >= test_start)
View(dfa)
m <- matrix(0,nrow(dfa)-last_weeks,last_weeks+1)
last_weeks <- 4
m <- matrix(0,nrow(dfa)-last_weeks,last_weeks+1)
m <- matrix(0,nrow(dfa)-last_weeks,last_weeks+1)
for(i in 1:nrow(m)){
m[i,] <- dfa$smp_mean[i:(i+5)]
}
i = 1
m[i,] <- dfa$smp_mean[i:(i+5)]
dfa$smp_mean[i:(i+5)]
i
for(i in 1:nrow(m)){
m[i,] <- dfa$smp_mean[i:(i+4)]
}
View(m)
gen_last_Nweeks_train <- function(df){
dfa <- subset(df,uni_time < test_start & uni_time >= comb_start)
dfb <- subset(df,uni_time >= test_start)
m <- matrix(0,nrow(dfa)-last_weeks,last_weeks+1)
for(i in 1:nrow(m)){
m[i,] <- dfa$smp_mean[i:(i+4)]
}
m
}
train <- lapply(smp_aggra,gen_last_Nweeks_train)
gen_last_Nweeks_train <- function(df){
cat(sprintf('%d\n',df$shop_id[1]))
dfa <- subset(df,uni_time < test_start & uni_time >= comb_start)
dfb <- subset(df,uni_time >= test_start)
m <- matrix(0,nrow(dfa)-last_weeks,last_weeks+1)
for(i in 1:nrow(m)){
m[i,] <- dfa$smp_mean[i:(i+4)]
}
m
}
train <- lapply(smp_aggra,gen_last_Nweeks_train)
gen_last_Nweeks_train <- function(df){
cat(sprintf('%d\n',fct2num(df$shop_id[1])))
dfa <- subset(df,uni_time < test_start & uni_time >= comb_start)
dfb <- subset(df,uni_time >= test_start)
m <- matrix(0,nrow(dfa)-last_weeks,last_weeks+1)
for(i in 1:nrow(m)){
m[i,] <- dfa$smp_mean[i:(i+4)]
}
m
}
train <- lapply(smp_aggra,gen_last_Nweeks_train)
df <- smp_aggra[[700]]
cat(sprintf('%d\n',fct2num(df$shop_id[1])))
dfa <- subset(df,uni_time < test_start & uni_time >= comb_start)
dfb <- subset(df,uni_time >= test_start)
gen_last_Nweeks_train <- function(df){
cat(sprintf('%d\n',fct2num(df$shop_id[1])))
dfa <- subset(df,uni_time < test_start & uni_time >= comb_start)
if(nrow(dfa) == 0)return(NULL)
dfb <- subset(df,uni_time >= test_start)
m <- matrix(0,nrow(dfa)-last_weeks,last_weeks+1)
for(i in 1:nrow(m)){
m[i,] <- dfa$smp_mean[i:(i+4)]
}
m
}
train <- lapply(smp_aggra,gen_last_Nweeks_train)
df <- smp_aggra[[1269]]
cat(sprintf('%d\n',fct2num(df$shop_id[1])))
dfa <- subset(df,uni_time < test_start & uni_time >= comb_start)
if(nrow(dfa) == 0)return(NULL)
gen_last_Nweeks_train <- function(df){
cat(sprintf('%d\n',fct2num(df$shop_id[1])))
dfa <- subset(df,uni_time < test_start & uni_time >= comb_start)
if(nrow(dfa) < 5)return(NULL)
dfb <- subset(df,uni_time >= test_start)
m <- matrix(0,nrow(dfa)-last_weeks,last_weeks+1)
for(i in 1:nrow(m)){
m[i,] <- dfa$smp_mean[i:(i+4)]
}
m
}
train <- lapply(smp_aggra,gen_last_Nweeks_train)
train <- do.call(rbind,lapply(smp_aggra,gen_last_Nweeks_train))
View(train)
fit <- glm(V5~.,data =- train,family = 'gaussian')
data_train <- data.frame(train)
fit <- glm(V5~.,data =data_train,family = 'gaussian')
fit <- glm(X5~.,data =data_train,family = 'gaussian')
summary(fit)
gen_last_Nweeks_train <- function(df,attr){
cat(sprintf('%d\n',fct2num(df$shop_id[1])))
dfa <- subset(df,uni_time < test_start & uni_time >= comb_start)
if(nrow(dfa) < 5)return(NULL)
dfb <- subset(df,uni_time >= test_start)
m <- matrix(0,nrow(dfa)-last_weeks,last_weeks+1)
for(i in 1:nrow(m)){
m[i,] <- dfa[attr][i:(i+4)]
}
m
}
gen_last_Nweeks_train <- function(df,attr){
cat(sprintf('%d\n',fct2num(df$shop_id[1])))
dfa <- subset(df,uni_time < test_start & uni_time >= comb_start)
if(nrow(dfa) < 5)return(NULL)
dfb <- subset(df,uni_time >= test_start)
m <- matrix(0,nrow(dfa)-last_weeks,last_weeks+1)
for(i in 1:nrow(m)){
m[i,] <- dfa[attr][i:(i+4)]
}
m
}
train_mean <- data.frame(do.call(rbind,lapply(smp_aggra,gen_last_Nweeks_train,attr = 'smp_mean')))
train_sd <- data.frame(do.call(rbind,lapply(smp_aggra,gen_last_Nweeks_train,attr = 'smp_sd')))
gen_last_Nweeks_train <- function(df,attr){
cat(sprintf('%d\n',fct2num(df$shop_id[1])))
dfa <- subset(df,uni_time < test_start & uni_time >= comb_start)
if(nrow(dfa) < 5)return(NULL)
dfb <- subset(df,uni_time >= test_start)
m <- matrix(0,nrow(dfa)-last_weeks,last_weeks+1)
for(i in 1:nrow(m)){
m[i,] <- dfa[attr][i:(i+4)]
}
m
}
train_mean <- data.frame(do.call(rbind,lapply(smp_aggra,gen_last_Nweeks_train,attr = 'smp_mean')))
gen_last_Nweeks_train <- function(df,attr){
cat(sprintf('%d\n',fct2num(df$shop_id[1])))
dfa <- subset(df,uni_time < test_start & uni_time >= comb_start)
if(nrow(dfa) < 5)return(NULL)
dfb <- subset(df,uni_time >= test_start)
m <- matrix(0,nrow(dfa)-last_weeks,last_weeks+1)
for(i in 1:nrow(m)){
m[i,] <- dfa[[attr]][i:(i+4)]
}
m
}
train_mean <- data.frame(do.call(rbind,lapply(smp_aggra,gen_last_Nweeks_train,attr = 'smp_mean')))
train_sd <- data.frame(do.call(rbind,lapply(smp_aggra,gen_last_Nweeks_train,attr = 'smp_sd')))
fit_mean <- glm(X5~.,data =data_train,family = 'gaussian')
fit_sd <- glm(X5~.,data =data_sd,family = 'gaussian')
fit_mean <- glm(X5~.,data =train_mean,family = 'gaussian')
fit_sd <- glm(X5~.,data =train_sd,family = 'gaussian')
source('~/Code/R/TC_koubei/base.R')
require(doParallel)
idx <- seq_len(length(smp_aggra))
ck <- makeCluster(min(floor(detectCores()*0.9),length(idx)),type = 'FORK',outfile = 'out_na')
registerDoParallel(ck)
r <- foreach(i = idx,.verbose = T,.packages = 'reshape2') %dopar% arimaX(smp_aggra[[i]],test_start = test_start)
stopCluster(ck)
r3 <- do.call(rbind,r)
colMeans(r1,na.rm = T);colMeans(r2,na.rm = T);colMeans(r3,na.rm = T)
