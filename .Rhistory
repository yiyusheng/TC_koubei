bag.fraction = 0.5,              # subsampling fraction, 0.5 is probably best
train.fraction = 0.5,           # fraction of data for training, first train.fraction*N used for training
n.minobsinnode = 10,             # minimum total weight needed in each node
cv.folds = 3,                     # do 3-fold cross-validation
keep.data=TRUE,                  # keep a copy of the dataset with the object
verbose=T,                   # don't print out progress
n.cores=1)
best.iter <- gbm.perf(gbm1,method="cv")
print(best.iter)
summary(gbm1,n.trees=best.iter) # based on the estimated best number of trees
pp <- predict(gbm1,test[,3:ncol(test)],n.trees=200,type='response')
pp <- predict(gbm1,test[,3:ncol(test)],n.trees=200)
out <- rbind(test[,1:2],pp)
out <- rbind(test[,c('shop_id','date')],pp)
out <- cbind(test[,c('shop_id','date')],pp)
View(out)
pp <- data.frame(pred = predict(gbm1,test[,4:ncol(test)],n.trees=200))
out <- cbind(test[,c('shop_id','date','value')],pp)
View(out)
pred
eval <- mean(abs((out$value - out$pred)/(out$value + out$pred)))
data_pred
out$dif <- abs(out$value - out$pred)
tapply(out$dif,out$diff,mean)
tapply(out$dif,out$date,mean)
source('D:/Git/TC_koubei/gen_model.R')
eval
summary(gbm1,n.trees=best.iter) # based on the estimated best number of trees
gbm1 <-
gbm(value~.,             # formula
data=train[,3:ncol(train)],                         # dataset
# var.monotone=c(0,0,0,0,0,0),    # -1: monotone decrease, +1: monotone increase,
#  0: no monotone restrictions
distribution="gaussian",        # see the help for other choices
n.trees=200,                     # number of trees
shrinkage=0.01,                   # shrinkage or learning rate, 0.001 to 0.1 usually work
interaction.depth=3,             # 1: additive model, 2: two-way interactions, etc.
bag.fraction = 0.5,              # subsampling fraction, 0.5 is probably best
train.fraction = 0.5,           # fraction of data for training, first train.fraction*N used for training
n.minobsinnode = 10,             # minimum total weight needed in each node
cv.folds = 3,                     # do 3-fold cross-validation
keep.data=TRUE,                  # keep a copy of the dataset with the object
verbose=T,                   # don't print out progress
n.cores=1)
summary(gbm1,n.trees=best.iter) # based on the estimated best number of trees
pp <- data.frame(pred = predict(gbm1,test[,4:ncol(test)],n.trees=200))
out <- cbind(test[,c('shop_id','date','value')],pp)
eval <- mean(abs((out$value - out$pred)/(out$value + out$pred)))
gbm1 <-
gbm(value~.,             # formula
data=train[,3:ncol(train)],                         # dataset
# var.monotone=c(0,0,0,0,0,0),    # -1: monotone decrease, +1: monotone increase,
#  0: no monotone restrictions
distribution="gaussian",        # see the help for other choices
n.trees=1000,                     # number of trees
shrinkage=0.01,                   # shrinkage or learning rate, 0.001 to 0.1 usually work
interaction.depth=3,             # 1: additive model, 2: two-way interactions, etc.
bag.fraction = 0.5,              # subsampling fraction, 0.5 is probably best
train.fraction = 0.5,           # fraction of data for training, first train.fraction*N used for training
n.minobsinnode = 10,             # minimum total weight needed in each node
cv.folds = 3,                     # do 3-fold cross-validation
keep.data=TRUE,                  # keep a copy of the dataset with the object
verbose=T,                   # don't print out progress
n.cores=1)
best.iter <- gbm.perf(gbm1,method="cv")
print(best.iter)
summary(gbm1,n.trees=best.iter) # based on the estimated best number of trees
pp <- data.frame(pred = predict(gbm1,test[,4:ncol(test)],n.trees=200))
out <- cbind(test[,c('shop_id','date','value')],pp)
eval <- mean(abs((out$value - out$pred)/(out$value + out$pred)))
source('D:/Git/TC_koubei/gen_model.R')
eval
cat(sprintf('eval:%.4f',eval))
summary(gbm1,n.trees=best.iter) # based on the estimated best number of trees
source('D:/Git/TC_koubei/gen_model.R')
pp <- data.frame(pred = predict(gbm1,test[,4:ncol(test)],n.trees=n_trees))
n_trees <- 1000
pp <- data.frame(pred = predict(gbm1,test[,4:ncol(test)],n.trees=n_trees))
out <- cbind(test[,c('shop_id','date','value')],pp)
eval <- mean(abs((out$value - out$pred)/(out$value + out$pred)))
cat(sprintf('eval:%.4f',eval))
source('D:/Git/TC_koubei/gen_model.R')
summary(gbm1,n.trees=best.iter) # based on the estimated best number of trees
source('D:/Git/TC_koubei/check_out.R')
source('D:/Git/TC_koubei/check_out.R')
out$ms <- abs(out$value - out$pred)/(out$value + out$pred)
out$shop_id <- factor(out$shop_id)
aggr_ms <- data.frame(shop_id = levels(out$shop_id),
means = as.numeric(tapply(out$value,out$shop_id,mean)),
sd = as.numeric(tapply(out$value,out$shop_id,sd)),
max = as.numeric(tapply(out$value,out$shop_id,max)),
min = as.numeric(tapply(out$value,out$shop_id,min)),
max_d = as.numeric(tapply(out$value,out$shop_id,which.max)),
min_d = as.numeric(tapply(out$value,out$shop_id,which.min)))
View(aggr_ms)
aggr_ms <- data.frame(shop_id = levels(out$shop_id),
means = as.numeric(tapply(out$ms,out$shop_id,mean)),
sd = as.numeric(tapply(out$ms,out$shop_id,sd)),
max = as.numeric(tapply(out$ms,out$shop_id,max)),
min = as.numeric(tapply(out$ms,out$shop_id,min)),
max_d = as.numeric(tapply(out$ms,out$shop_id,which.max)),
min_d = as.numeric(tapply(out$ms,out$shop_id,which.min)))
View(aggr_ms)
aggr_ms <- data.frame(shop_id = levels(out$shop_id),
mean = as.numeric(tapply(out$ms,out$shop_id,mean)),
sd = as.numeric(tapply(out$ms,out$shop_id,sd)),
max = as.numeric(tapply(out$ms,out$shop_id,max)),
min = as.numeric(tapply(out$ms,out$shop_id,min)),
max_d = as.numeric(tapply(out$ms,out$shop_id,which.max)),
min_d = as.numeric(tapply(out$ms,out$shop_id,which.min)))
ggplot(aggr_ms,aes(x = mean)) + geom_histogram(bins = 100)
mean(out$ms)
mean(aggr_ms$mean)
ggplot(aggr_ms,aes(x = mean)) + geom_histogram(bins = 100)
ggplot(aggr_ms,aes(x = sd)) + geom_histogram(bins = 100)
ggplot(aggr_ms,aes(x = mean,y = sd)) + geom_point()
ggplot(aggr_ms,aes(x = max)) + geom_histogram(bins = 100)
ggplot(aggr_ms,aes(x = max)) + geom_histogram(bins = 100)
ggplot(aggr_ms,aes(x = min)) + geom_histogram(bins = 100)
mean(aggr_ms$min)
aggr_ms <- data.frame(shop_id = levels(out$shop_id),
mean = as.numeric(tapply(out$ms,out$shop_id,mean)),
sd = as.numeric(tapply(out$ms,out$shop_id,sd)),
max = as.numeric(tapply(out$ms,out$shop_id,max)),
median = as.numeric(tapply(out$ms,out$shop_id,median)),
min = as.numeric(tapply(out$ms,out$shop_id,min)),
max_d = as.numeric(tapply(out$ms,out$shop_id,which.max)),
min_d = as.numeric(tapply(out$ms,out$shop_id,which.min)))
ggplot(aggr_ms,aes(x = median)) + geom_histogram(bins = 100)
ggplot(aggr_ms,aes(x = min)) + geom_histogram(bins = 100)
ggplot(aggr_ms,aes(x = max_d)) + geom_histogram(bins = 100)
ggplot(aggr_ms,aes(x = mean)) + geom_histogram(bins = 100)
ggplot(aggr_ms,aes(x = min_d)) + geom_histogram(bins = 100)
ggplot(aggr_ms,aes(x = max_d)) + geom_histogram(bins = 100)
p1 <- ggplot(aggr_ms,aes(x = mean)) + geom_histogram(bins = 100) + ggtitle('mean')
p2 <- ggplot(aggr_ms,aes(x = sd)) + geom_histogram(bins = 100) + ggtitle('sd')
p3 <- ggplot(aggr_ms,aes(x = mean,y = sd)) + geom_point() + ggtitle('mean-sd')
p4 <- ggplot(aggr_ms,aes(x = max)) + geom_histogram(bins = 100) + ggtitle('max')
p5 <- ggplot(aggr_ms,aes(x = median)) + geom_histogram(bins = 100) + ggtitle('median')
p6 <- ggplot(aggr_ms,aes(x = min)) + geom_histogram(bins = 100) + ggtitle('min')
p7 <- ggplot(aggr_ms,aes(x = max_d)) + geom_histogram(bins = 100) + ggtitle('max_d')
p8 <- ggplot(aggr_ms,aes(x = min_d)) + geom_histogram(bins = 100) + ggtitle('min_d')
multiplot(p1,p2,p3,p4,p5,p6,p7,p8,cols = 4)
out$shop_id <- factor(out$shop_id)
out$ms <- abs(out$value - out$pred)/(out$value + out$pred)
cat(sprintf('Error: %.4f',mean(out$ms)))
aggr_ms <- data.frame(shop_id = levels(out$shop_id),
mean = as.numeric(tapply(out$ms,out$shop_id,mean)),
sd = as.numeric(tapply(out$ms,out$shop_id,sd)),
max = as.numeric(tapply(out$ms,out$shop_id,max)),
median = as.numeric(tapply(out$ms,out$shop_id,median)),
min = as.numeric(tapply(out$ms,out$shop_id,min)),
max_d = as.numeric(tapply(out$ms,out$shop_id,which.max)),
min_d = as.numeric(tapply(out$ms,out$shop_id,which.min)))
p1 <- ggplot(aggr_ms,aes(x = mean)) + geom_histogram(bins = 100) + ggtitle('mean')
p2 <- ggplot(aggr_ms,aes(x = sd)) + geom_histogram(bins = 100) + ggtitle('sd')
p3 <- ggplot(aggr_ms,aes(x = mean,y = sd)) + geom_point() + ggtitle('mean-sd')
p4 <- ggplot(aggr_ms,aes(x = max)) + geom_histogram(bins = 100) + ggtitle('max')
p5 <- ggplot(aggr_ms,aes(x = median)) + geom_histogram(bins = 100) + ggtitle('median')
p6 <- ggplot(aggr_ms,aes(x = min)) + geom_histogram(bins = 100) + ggtitle('min')
p7 <- ggplot(aggr_ms,aes(x = max_d)) + geom_histogram(bins = 100) + ggtitle('max_d')
p8 <- ggplot(aggr_ms,aes(x = min_d)) + geom_histogram(bins = 100) + ggtitle('min_d')
multiplot(p1,p2,p3,p4,p5,p6,p7,p8,cols = 4)
rm(list = ls())
source('head.R')
load(file.path(dir_data,'shop_pay.Rda'))
test_start <- as.p('2016-11-01') - 14*86400
test_end <- as.p('2016-11-01')
evaluate_pay <- function(data_pred){
shop_pay_test <- subset(shop_pay,uni_time >= test_start & uni_time < test_end)
data_comp <- merge(shop_pay_test,data_pred,by = c('shop_id','uni_time'))
names(data_comp) <- c('shop_id','uni_time','real','pred')
eval <- mean(abs((data_comp$real - data_comp$pred)/(data_comp$real + data_comp$pred)))
}
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*14) & uni_time < (test_end - 86400*14))
data_pred$uni_time <- data_pred$uni_time + 86400*14
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*7) & uni_time < (test_end - 86400*7))
data_pred$uni_time <- data_pred$uni_time + 86400 * 7
tmp <- data_pred
tmp$uni_time <- tmp$uni_time + 86400 * 7
data_pred <- rbind(data_pred,tmp)
rm(list = ls())
source('head.R')
# load(file.path(dir_data,'data_load_A.Rda'))
load(file.path(dir_data,'shop_pay.Rda'))
test_start <- as.p('2016-11-01') - 14*86400
test_end <- as.p('2016-11-01')
add_real <- function(data_pred){
data_real <- subset(shop_pay,uni_time >= test_start & uni_time < test_end)
data_comp <- merge(data_real,data_pred,by = c('shop_id','uni_time'))
names(data_comp) <- c('shop_id','uni_time','real','pred')
data_comp
}
# E1.last 14 days
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*14) & uni_time < (test_end - 86400*14))
data_pred$uni_time <- data_pred$uni_time + 86400*14
data_comp <- add_real(data_pred)
View(data_comp)
source('check_result.R')
r_e1 <- check_result(data_comp_e1)
data_comp_e1 <- add_real(data_pred)
r_e1 <- check_result(data_comp_e1)
rm(list = ls())
source('head.R')
source('check_result.R')
load(file.path(dir_data,'shop_pay.Rda'))
test_start <- as.p('2016-11-01') - 14*86400
test_end <- as.p('2016-11-01')
add_real <- function(data_pred){
data_real <- subset(shop_pay,uni_time >= test_start & uni_time < test_end)
data_comp <- merge(data_real,data_pred,by = c('shop_id','uni_time'))
names(data_comp) <- c('shop_id','uni_time','value','pred')
data_comp
}
# E1.last 14 days
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*14) & uni_time < (test_end - 86400*14))
data_pred$uni_time <- data_pred$uni_time + 86400*14
data_comp_e1 <- add_real(data_pred)
r_e1 <- check_result(data_comp_e1)
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*7) & uni_time < (test_end - 86400*7))
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*7) & uni_time < (test_end - 86400*14))
data_pred$uni_time <- data_pred$uni_time + 86400 * 7
tmp <- data_pred
tmp$uni_time <- tmp$uni_time + 86400 * 7
data_pred <- rbind(data_pred,tmp)
data_comp_e2 <- add_real(data_pred)
View(data_comp_e2)
r_e2 <- check_result(data_comp_e2)
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*3) & uni_time < test_start)
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*3) & uni_time < test_start)
data_pred$uni_time <- data_pred$uni_time + 86400 * 3
k <- 3
14/3
14//3
14%3
14%%3
k <- 3;rp <- ceiling(14/k)
k <- 3;rp <- ceiling(14/k)
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*k) & uni_time < test_start)
data_pred$uni_time <- data_pred$uni_time + 86400 * k
data_pred_expand <- sapply(rp,function(i){
data_pred$uni_time <- data_pred$uni_time + 86400 * k * i
data_pred
})
data_pred <- subset(data_pred,,uni_time >= test_start & uni_time < test_end)
rp
data_pred_expand <- sapply(seq_len(rp),function(i){
data_pred$uni_time <- data_pred$uni_time + 86400 * k * i
data_pred
})
seq_len(rp)
data_pred_expand <- sapply(seq_len(rp),function(i){
data_pred$uni_time <- data_pred$uni_time + 86400 * k * i
data_pred
})
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*k) & uni_time < test_start)
data_pred$uni_time <- data_pred$uni_time + 86400 * k
data_pred_expand <- sapply(seq_len(rp),function(i){
data_pred$uni_time <- data_pred$uni_time + 86400 * k * i
data_pred
})
data_pred_expand <- lapply(seq_len(rp),function(i){
data_pred$uni_time <- data_pred$uni_time + 86400 * k * i
data_pred
})
data_pred <- subset(do.call(rbind,data_pred_expand),,uni_time >= test_start & uni_time < test_end)
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*k) & uni_time < test_start)
data_pred$uni_time <- data_pred$uni_time + 86400 * k
data_pred_expand <- lapply(seq_len(rp),function(i){
data_pred$uni_time <- data_pred$uni_time + 86400 * k * i
data_pred
})
data_pred_expand <- do.call(rbind,data_pred_expand)
View(data_pred_expand)
data_pred <- subset(data_pred_expand,uni_time >= test_start & uni_time < test_end)
data_comp_e3 <- add_real(data_pred)
r_e3 <- check_result(data_comp_e3)
k <- 7;rp <- ceiling(14/k)
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*k) & uni_time < test_start)
data_pred$uni_time <- data_pred$uni_time + 86400 * k
data_pred_expand <- lapply(seq_len(rp),function(i){
data_pred$uni_time <- data_pred$uni_time + 86400 * k * i
data_pred
})
data_pred_expand <- do.call(rbind,data_pred_expand)
data_pred <- subset(data_pred_expand,uni_time >= test_start & uni_time < test_end)
data_comp_e3 <- add_real(data_pred)
r_e3 <- check_result(data_comp_e3)
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*7) & uni_time < (test_end - 86400*14))
data_pred$uni_time <- data_pred$uni_time + 86400 * 7
tmp <- data_pred
tmp$uni_time <- tmp$uni_time + 86400 * 7
data_pred <- rbind(data_pred,tmp)
data_comp_e2 <- add_real(data_pred)
r_e2 <- check_result(data_comp_e2)
source('D:/Git/TC_koubei/check_result.R')
(test_end - 86400*14)
test_start
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*7) & uni_time < (test_end - 86400*14))
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*k) & uni_time < test_start)
k <- 7;rp <- ceiling(14/k)
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*k) & uni_time < test_start)
data_pred_expand <- lapply(seq_len(rp),function(i){
data_pred$uni_time <- data_pred$uni_time + 86400 * k * i
data_pred
})
data_pred_expand <- do.call(rbind,data_pred_expand)
data_pred <- subset(data_pred_expand,uni_time >= test_start & uni_time < test_end)
data_comp_e3 <- add_real(data_pred)
r_e3 <- check_result(data_comp_e3)
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*7) & uni_time < (test_end - 86400*14))
data_pred$uni_time <- data_pred$uni_time + 86400 * 7
tmp <- data_pred
tmp$uni_time <- tmp$uni_time + 86400 * 7
data_pred <- rbind(data_pred,tmp)
data_comp_e2 <- add_real(data_pred)
r_e2 <- check_result(data_comp_e2)
k <- 14;rp <- ceiling(14/k)
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*k) & uni_time < test_start)
data_pred_expand <- lapply(seq_len(rp),function(i){
data_pred$uni_time <- data_pred$uni_time + 86400 * k * i
data_pred
})
data_pred_expand <- do.call(rbind,data_pred_expand)
data_pred <- subset(data_pred_expand,uni_time >= test_start & uni_time < test_end)
data_comp_e3 <- add_real(data_pred)
r_e3 <- check_result(data_comp_e3)
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*14) & uni_time < (test_end - 86400*14))
data_pred$uni_time <- data_pred$uni_time + 86400*14
data_comp_e1 <- add_real(data_pred)
r_e1 <- check_result(data_comp_e1)
k <- 1;rp <- ceiling(14/k)
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*k) & uni_time < test_start)
data_pred_expand <- lapply(seq_len(rp),function(i){
data_pred$uni_time <- data_pred$uni_time + 86400 * k * i
data_pred
})
data_pred_expand <- do.call(rbind,data_pred_expand)
data_pred <- subset(data_pred_expand,uni_time >= test_start & uni_time < test_end)
data_comp_e3 <- add_real(data_pred)
r_e3 <- check_result(data_comp_e3)
add_real <- function(data_pred){
data_real <- subset(shop_pay,uni_time >= test_start & uni_time < test_end)
data_comp <- merge(data_real,data_pred,by = c('shop_id','uni_time'))
names(data_comp) <- c('shop_id','uni_time','value','pred')
data_comp
}
expand_last_kdays <- function(k){
rp <- ceiling(14/k)
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*k) & uni_time < test_start)
data_pred_expand <- lapply(seq_len(rp),function(i){
data_pred$uni_time <- data_pred$uni_time + 86400 * k * i
data_pred
})
data_pred_expand <- do.call(rbind,data_pred_expand)
data_pred <- subset(data_pred_expand,uni_time >= test_start & uni_time < test_end)
data_comp <- add_real(data_pred)
r <- check_result(data_comp)
}
r14 <- expand_last_kdays(14)
r7 <- expand_last_kdays(7)
sapply(1:14,expand_last_kdays)
r7 <- expand_last_kdays(30)
k = 30
rp <- ceiling(14/k)
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*k) & uni_time < test_start)
data_pred_expand <- lapply(seq_len(rp),function(i){
data_pred$uni_time <- data_pred$uni_time + 86400 * k * i
data_pred
})
data_pred_expand <- do.call(rbind,data_pred_expand)
data_pred <- subset(data_pred_expand,uni_time >= test_start & uni_time < test_end)
a <- sapply(1:100,expand_last_kdays)
expand_last_kdays <- function(k){
rp <- ceiling(14/k)
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*k) & uni_time < test_start)
data_pred_expand <- lapply(seq_len(rp),function(i){
data_pred$uni_time <- data_pred$uni_time + 86400 * k * i
data_pred
})
data_pred_expand <- do.call(rbind,data_pred_expand)
data_pred <- subset(data_pred_expand,uni_time >= test_start & uni_time < test_end)
data_comp <- add_real(data_pred)
cat(sprintf('last %.0f days\t'))
r <- check_result(data_comp)
}
r14 <- expand_last_kdays(14)
expand_last_kdays <- function(k){
rp <- ceiling(14/k)
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*k) & uni_time < test_start)
data_pred_expand <- lapply(seq_len(rp),function(i){
data_pred$uni_time <- data_pred$uni_time + 86400 * k * i
data_pred
})
data_pred_expand <- do.call(rbind,data_pred_expand)
data_pred <- subset(data_pred_expand,uni_time >= test_start & uni_time < test_end)
data_comp <- add_real(data_pred)
cat(sprintf('last %.0f days\t',k))
r <- check_result(data_comp)
}
r14 <- expand_last_kdays(14)
add_real <- function(data_pred){
data_real <- subset(shop_pay,uni_time >= test_start & uni_time < test_end)
data_comp <- merge(data_real,data_pred,by = c('shop_id','uni_time'))
names(data_comp) <- c('shop_id','uni_time','value','pred')
data_comp
}
expand_last_kdays <- function(k){
rp <- ceiling(14/k)
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*k) & uni_time < test_start)
data_pred_expand <- lapply(seq_len(rp),function(i){
data_pred$uni_time <- data_pred$uni_time + 86400 * k * i
data_pred
})
data_pred_expand <- do.call(rbind,data_pred_expand)
data_pred <- subset(data_pred_expand,uni_time >= test_start & uni_time < test_end)
data_comp <- add_real(data_pred)
cat(sprintf('Last %.0f days\t',k))
r <- check_result(data_comp)
}
# E1.last 14 days
r14 <- expand_last_kdays(14)
# E2.last 7 days
r7 <- expand_last_kdays(30)
a <- sapply(1:100,expand_last_kdays)
source('D:/Git/TC_koubei/evaluate_pay.R')
rm(list = ls())
source('head.R')
source('check_result.R')
load(file.path(dir_data,'shop_pay.Rda'))
# test_start <- test_end - 14*86400
# test_end <- as.p('2016-11-01')
test_start <- test_end - 14*86400
test_end <- as.p('2016-11-01')
test_end <- as.p('2016-11-15')
test_start <- test_end - 14*86400
source('D:/Git/TC_koubei/evaluate_pay.R')
rm(list = ls())
source('head.R')
source('check_result.R')
load(file.path(dir_data,'shop_pay.Rda'))
# test_end <- as.p('2016-11-01')
# test_start <- test_end - 14*86400
test_end <- as.p('2016-11-15')
test_start <- test_end - 14*86400
add_real <- function(data_pred){
data_real <- subset(shop_pay,uni_time >= test_start & uni_time < test_end)
data_comp <- merge(data_real,data_pred,by = c('shop_id','uni_time'))
names(data_comp) <- c('shop_id','uni_time','value','pred')
data_comp
}
expand_last_kdays <- function(k){
rp <- ceiling(14/k)
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*k) & uni_time < test_start)
data_pred_expand <- lapply(seq_len(rp),function(i){
data_pred$uni_time <- data_pred$uni_time + 86400 * k * i
data_pred
})
data_pred_expand <- do.call(rbind,data_pred_expand)
data_pred <- subset(data_pred_expand,uni_time >= test_start & uni_time < test_end)
data_comp <- add_real(data_pred)
cat(sprintf('Last %.0f days\t',k))
r <- check_result(data_comp)
return(list(r,data_comp))
}
r14 <- expand_last_kdays(14)
k = 7
rp <- ceiling(14/k)
data_pred <- subset(shop_pay,uni_time >= (test_start - 86400*k) & uni_time < test_start)
data_pred_expand <- lapply(seq_len(rp),function(i){
data_pred$uni_time <- data_pred$uni_time + 86400 * k * i
data_pred
})
data_pred_expand <- do.call(rbind,data_pred_expand)
data_pred <- subset(data_pred_expand,uni_time >= test_start & uni_time < test_end)
data_comp <- add_real(data_pred)
source('D:/Git/TC_koubei/evaluate_pay.R')
View(r7)
r7a <- dcast(shop_id~uni_time,data = r7,value.var = 'value')
View(r7a)
names(r7a) <- c('shop_id',paste('day_',1:14,sep=''))
View(r7a)
quantileX(r7$value)
a <- subset(r7,value > 700)
View(a)
setdiff(1:2000,unique(r7$shop_id))
a <- subset(shop_pay,shop_id == '1707')
View(a)
a <- subset(shop_pay,shop_id == '1824')
tmp_1707 <- shop_pay$value[shop_pay$shop_id == '1707' &
shop_pay$uni_time >= as.p('2016-10-18') &
shop_pay$uni_time < as.p('2016-10-25')]
tmp_1824 <- shop_pay$value[shop_pay$shop_id == '1824' &
shop_pay$uni_time >= as.p('2016-10-04') &
shop_pay$uni_time < as.p('2016-10-11')]
c(1707,tmp_1707,tmp_1707)
r7a <- rbind(r7a,c(1707,tmp_1707,tmp_1707))
r7a <- dcast(shop_id~uni_time,data = r7,value.var = 'value')
names(r7a) <- c('shop_id',paste('day_',1:14,sep=''))
tmp_1707 <- shop_pay$value[shop_pay$shop_id == '1707' &
shop_pay$uni_time >= as.p('2016-10-18') &
shop_pay$uni_time < as.p('2016-10-25')]
tmp_1824 <- shop_pay$value[shop_pay$shop_id == '1824' &
shop_pay$uni_time >= as.p('2016-10-04') &
shop_pay$uni_time < as.p('2016-10-11')]
r7a <- rbind(r7a,
c(1707,tmp_1707,tmp_1707),
c(1824,tmp_1824,tmp_1824))
?write.table
write.table(r7a,file = file.path(dir_data,'0208a.csv'),quote = F,sep=',',row.names = F,col.names = F)
r7a <- r7a[order(r7a$shop_id),]
write.table(r7a,file = file.path(dir_data,'0208a.csv'),quote = F,sep=',',row.names = F,col.names = F)
